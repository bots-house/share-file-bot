package bot

import (
	"context"
	"fmt"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api"
	"github.com/lithammer/dedent"
)

var (
	textSettingsChannelsAndChats = dedent.Dedent(`
		‚öôÔ∏è __*–ù–∞—Å—Ç—Ä–æ–π–∫–∏*__ / üì¢ __*–ö–∞–Ω–∞–ª—ã –∏ —á–∞—Ç—ã*__
		
		–í –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–º–∏ —á–∞—Ç–∞–º–∏ –∏ –∫–∞–Ω–∞–ª–∞–º–∏\. 
		–≠—Ç–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —É–≤–µ–ª–µ—á–µ–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Å–∏–∏, —Ç–∞–∫ –∫–∞–∫ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Ç–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º–∏ –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ —á–∞—Ç–∞\.
	`)

	textSettingsChannelsAndChatsConnect = dedent.Dedent(`
		‚öôÔ∏è __*–ù–∞—Å—Ç—Ä–æ–π–∫–∏*__ / üì¢ __*–ö–∞–Ω–∞–ª—ã –∏ —á–∞—Ç—ã*__ / __*–ü–æ–¥–∫–ª—é—á–∏—Ç—å*__

		–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª –∏–ª–∏ —á–∞—Ç, —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:

		1\. –î–æ–±–∞–≤—å—Ç–µ @%s –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç—Ä–∞—Ç–æ—Ä—ã –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ —á–∞—Ç–∞ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏ \(–Ω–∞–ø—Ä–∏–º–µ—Ä "Add User"\)\.
		2\. –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ @username –∏–ª–∏ –ø—Ä–∏–≤–∞—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª –∏–ª–∏ —á–∞—Ç, —Ç–∞–∫ –∂–µ —Ç—ã –º–æ–∂–µ—à—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞\.
	`)

	textSettingsChannelsAndChatsButtonConnect = "+ –ü–æ–¥–∫–ª—é—á–∏—Ç—å"
	callbackSettingsChannelsAndChatsConnect   = "settings:channels-and-chats:connect"
)

func (bot *Bot) newSettingsChannelsAndChatsMessageEdit(ctx context.Context, chatID int64, msgID int) tgbotapi.EditMessageTextConfig {
	answ := tgbotapi.NewEditMessageText(chatID, msgID, textSettingsChannelsAndChats)

	markup := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData(
				textSettingsChannelsAndChatsButtonConnect,
				callbackSettingsChannelsAndChatsConnect,
			),
			tgbotapi.NewInlineKeyboardButtonData(
				textCommonBack,
				callbackSettings,
			),
		),
	)

	answ.ReplyMarkup = &markup
	answ.ParseMode = "MarkdownV2"

	return answ
}

func (bot *Bot) onSettingsChannelsAndChats(ctx context.Context, cbq *tgbotapi.CallbackQuery) error {
	go bot.answerCallbackQuery(ctx, cbq, "")
	edit := bot.newSettingsChannelsAndChatsMessageEdit(ctx, cbq.Message.Chat.ID, cbq.Message.MessageID)
	return bot.send(ctx, edit)
}

func (bot *Bot) newSettingsChannelsAndChatsConnectEdit(ctx context.Context, cid int64, mid int) tgbotapi.EditMessageTextConfig {
	text := fmt.Sprintf(textSettingsChannelsAndChatsConnect, escapeMarkdown(bot.client.Self.UserName))
	answ := tgbotapi.NewEditMessageText(cid, mid, text)

	markup := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData(
				textCommonBack,
				callbackSettingsChannelsAndChats,
			),
		),
	)

	answ.ReplyMarkup = &markup
	answ.ParseMode = "MarkdownV2"

	return answ
}

func (bot *Bot) onSettingsChannelsAndChatsConnect(ctx context.Context, cbq *tgbotapi.CallbackQuery) error {
	go bot.answerCallbackQuery(ctx, cbq, "")
	edit := bot.newSettingsChannelsAndChatsConnectEdit(ctx, cbq.Message.Chat.ID, cbq.Message.MessageID)
	return bot.send(ctx, edit)
}
